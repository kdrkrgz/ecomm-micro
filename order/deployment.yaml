apiVersion: v1
kind: Service
metadata:
  name: order
  labels:
    app: order
spec:
    selector:
        app: order
    ports:
      - name: grpc
        protocol: TCP
        port: 8080
        targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  labels:
    app: order
spec:
  replicas: 1
  selector:
    matchLabels:
      service: order
  template:
    metadata:
      labels:
        service: order
    spec:
      initContainers:
        - name: postgresql-check
          image: postgres:latest
          command: ["/bin/sh", "-c",
                    "until pg_isready -h postgres -p 5432 -U ecommdb_root; do echo waiting for postgresql; sleep 15; done;"]
      containers:
        - name: order
          image: order
          env:
            - name: APPLICATION_PORT
              value: "8080"
            - name: PAYMENT_SERVICE_URL
              value: "payment:8081"
            - name: ENV
              value: "prod"
            - name: DATA_SOURCE_URL
              value: "host=postgres user=ecommdb_root password=s3cr3t dbname=orders port=5432 sslmode=disable"
          ports:
            - containerPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    #cert-manager.io/cluster-issuer: selfsigned-issuer
  name: order
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: ingress.local.dev.com
      http:
        paths:
          - path: /Order
            pathType: Prefix
            backend:
              service:
                name: order
                port:
                  number: 8080
  tls:
    - hosts:
        - ingress.local.dev.com
      secretName: order-tls