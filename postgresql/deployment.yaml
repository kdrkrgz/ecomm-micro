apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  serviceName: postgresql
  selector:
    matchLabels:
      app: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
         - name: postgresql
           image: postgres:latest
           ports:
             - containerPort: 5432
           env:
             - name: POSTGRES_DB
               value: ecommdb
             - name: POSTGRES_USER
               value: ecommdb_root
             - name: POSTGRES_PASSWORD
               value: s3cr3t
           volumeMounts:
              - name: postgresql-pv
                mountPath: /var/lib/postgresql/data
           livenessProbe:
                exec:
                  command: ["pg_isready", "-U", "ecommdb_root"]
                initialDelaySeconds: 30
                periodSeconds: 10
                timeoutSeconds: 5
           readinessProbe:
                exec:
                    command: ["pg_isready", "-U", "ecommdb_root"]
                initialDelaySeconds: 5
                periodSeconds: 10
                timeoutSeconds: 5
      volumes:
          - name: postgresql-pv
            persistentVolumeClaim:
              claimName: postgresql-pvc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
data:
  init.sql: |
    psql -U ecommdb_root -tc "SELECT 1 FROM pg_database WHERE datname = 'orders'" | grep -q 1 || psql -U ecommdb_root -c "CREATE DATABASE orders"
    psql -U ecommdb_root -tc "SELECT 1 FROM pg_database WHERE datname = 'payments'" | grep -q 1 || psql -U ecommdb_root -c "CREATE DATABASE payments"
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  clusterIP: None
  ports:
    - name: '5432'
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
      app: postgresql